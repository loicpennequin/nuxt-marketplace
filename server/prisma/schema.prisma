datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id            String    @id @default(cuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  lastOnlineAt  DateTime?
  firstname     String?
  lastname      String?
  username      String
  usernameTag   String
  slug          String
  bio           String?
  gender        Gender
  account       Account?
  products      Product[]
  cartsAsSeller Cart[]    @relation(name: "seller")
  cartsAsBuyer  Cart[]    @relation(name: "buyer")
  avatarId      String?   @unique
  avatar        Media?    @relation(fields: [avatarId], references: [id])
}

model Account {
  id                    String    @id @default(cuid())
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @updatedAt
  email                 String    @unique
  emailVerifyToken      String?
  emailVerified         Boolean   @default(false)
  passwordHash          String
  passwordResetToken    String?
  refreshToken          String?   @db.VarChar(200)
  refreshTokenExpiresIn Int?
  userId                String    @unique
  user                  User      @relation(fields: [userId], references: [id])

  @@index(fields: [refreshToken])
}

model Product {
  id          String @id @default(cuid())
  name        String @db.VarChar(255)
  description String
  price       Int
  sellerId    String
  seller      User   @relation(fields: [sellerId], references: [id])
}

model Cart {
  id       String @id @default(cuid())
  buyerId  String
  sellerId String
  seller   User   @relation(name: "seller", fields: [sellerId], references: [id])
  buyer    User   @relation(name: "buyer", fields: [buyerId], references: [id])
}

model Media {
  id     String @id @default(cuid())
  url    String
  User   User?
  userId String
}
